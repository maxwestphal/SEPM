% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/define_transform.R
\name{define_transform}
\alias{define_transform}
\title{Transform parameter estimates before conducting statistical inference}
\usage{
define_transform(transform, link, inv, se.t)
}
\arguments{
\item{transform}{character, name of the transform.}

\item{link}{function, which maps the raw estimate to the transformed estimate.}

\item{inv}{function, inverse of link:  \code{inv = link^{-1}: y -> x}}

\item{se.t}{function, standard error of the transformed quantitiy (delta method). se.t needs
to have formal input arguments \code{se}, \code{n}, \code{estimate} (even if the result does
not depend on them).}
}
\value{
A SEPM.transform which may be passed to \code{\link{infer}}.
}
\description{
Define a transform which shall be used for a statistical test, see \code{\link{infer}}.
}
\details{
If transform corresponds to a known SEPM.transform object, this will object be returned
and all other input arguments are ignored. \code{define_transform()} will print a list of known
transforms.

The use of a transform (other than "none") may help with making the test statistic(s) more
"gaussian". In addition, it can prevent confidence bounds outside the parameter space. This a
realistic issue in binomial models, e.g. when working with proportions like accuracy or
classification error (ce). In this case the implemented transforms "logit" and "asin.sqrt"
enforce confidence intervals in [0,1].

The output of the function se.t can be computed analytically with help of the Delta method, see
\href{https://en.wikipedia.org/wiki/Delta_method}{Delta Method (Wikipedia)}.
}
